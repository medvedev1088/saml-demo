package demo.springone2018.saml;

import java.time.Clock;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.IsEqual.equalTo;
import org.junit.Test;
import org.springframework.security.saml.saml2.Saml2Object;
import org.springframework.security.saml.saml2.authentication.Response;
import org.springframework.security.saml.spi.SpringSecuritySaml;
import org.springframework.security.saml.spi.opensaml.OpenSamlImplementation;

public class DecodeTest {

    @Test
    public void isPeterParker() {
        SpringSecuritySaml saml =
            new OpenSamlImplementation(Clock.systemUTC()).init();

        byte[] decode = saml.decode(r);
        Saml2Object object = saml.resolve(decode, null, null);
        Response response = (Response)object;
        assertThat(
            response.getAssertions().get(0).getSubject().getPrincipal().getValue(),
            equalTo("pet_parker")
        );
    }

    String r = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHNhbWwycDpSZXNwb25zZSBEZXN0aW5hdGlvbj0iaHR0cDovL2xvY2FsaG9zdDo5MDkxL2RlbW8tc3Avc2FtbC9zcC9TU08vYWxpYXMvZGVtby1zcCIgSUQ9ImNjMjUyYmFlLWNmMjYtNGJjMy04NGRmLTJlZjY4ZTZkYTA1ZiIgSXNzdWVJbnN0YW50PSIyMDE4LTA5LTI2VDIwOjM5OjA1Ljk2OVoiIFZlcnNpb249IjIuMCIgeG1sbnM6c2FtbDJwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPjxzYW1sMjpJc3N1ZXIgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHA6Ly9sb2NhbGhvc3Q6OTA5Mi9kZW1vLWlkcDwvc2FtbDI6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgo8ZHM6U2lnbmVkSW5mbz4KPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KPGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz4KPGRzOlJlZmVyZW5jZSBVUkk9IiNjYzI1MmJhZS1jZjI2LTRiYzMtODRkZi0yZWY2OGU2ZGEwNWYiPgo8ZHM6VHJhbnNmb3Jtcz4KPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+CjxkczpUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KPC9kczpUcmFuc2Zvcm1zPgo8ZHM6RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjc2hhMjU2Ii8+CjxkczpEaWdlc3RWYWx1ZT5VMGlWZEl3SkhRTGxIWithdi9hazU5T1N1eHhVeE84TDRROUk0L2c4NktrPTwvZHM6RGlnZXN0VmFsdWU+CjwvZHM6UmVmZXJlbmNlPgo8L2RzOlNpZ25lZEluZm8+CjxkczpTaWduYXR1cmVWYWx1ZT4KaTNhbDd5QS9rcjE4SmdkSXRaai8va2FycUdwQkFaZ3VvQVJoU1p1OHJPUGZmSi82bjUzSjhFM1pFbmdzbWZ3bjJCM0QxWkFGSStqQwptbkhkWkplZmlGMlFaeXpaMzlPMFo4WEQzQWhHc3ZFRHB0UjRtdytRRlBFd0gwUzBCRnZ1QmUxU3Z1TUtOTlRUa0FHUEJ5STRUbWw2CmEyaTBwdVN5NU5TVi9taHNjUEk9CjwvZHM6U2lnbmF0dXJlVmFsdWU+CjxkczpLZXlJbmZvPjxkczpYNTA5RGF0YT48ZHM6WDUwOUNlcnRpZmljYXRlPk1JSUNtVENDQWdJQ0NRRHp6WFVpUTJMZm96QU5CZ2txaGtpRzl3MEJBUXNGQURDQmtERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlYKQkFnTUNsZGhjMmhwYm1kMGIyNHhFakFRQmdOVkJBY01DVlpoYm1OdmRYWmxjakVkTUJzR0ExVUVDZ3dVVTNCeWFXNW5JRk5sWTNWeQphWFI1SUZOQlRVd3hFVEFQQmdOVkJBc01DSE5oYld3dGFXUndNU1l3SkFZRFZRUUREQjF6WVcxc0xXbGtjQzV6Y0hKcGJtY3VjMlZqCmRYSnBkSGt1YzJGdGJEQWVGdzB4T0RBNU1UZ3hOekF4TkRCYUZ3MHlPREE1TVRVeE56QXhOREJhTUlHUU1Rc3dDUVlEVlFRR0V3SlYKVXpFVE1CRUdBMVVFQ0F3S1YyRnphR2x1WjNSdmJqRVNNQkFHQTFVRUJ3d0pWbUZ1WTI5MWRtVnlNUjB3R3dZRFZRUUtEQlJUY0hKcApibWNnVTJWamRYSnBkSGtnVTBGTlRERVJNQThHQTFVRUN3d0ljMkZ0YkMxcFpIQXhKakFrQmdOVkJBTU1IWE5oYld3dGFXUndMbk53CmNtbHVaeTV6WldOMWNtbDBlUzV6WVcxc01JR2ZNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0R05BRENCaVFLQmdRQzdHN0RDSWdaMFh6NGQKYWV4QmVkNUZxQ293VVBRMERwTGk0QnNLRTFBMkZ1UGFEa0FvdzR6cUpBU3FYQjhrR2x1TE56N1ZhNndTd2lHWmlZU0RFRmt2OUpyKwpwWVFydGhsZmRJT3o4YlE4eDlxQXk1aEV1VjFvN3V3WTh4RnZuSjk2QW1HQk1CZlhWMDVQNm5oeVg5cWJsa2JzeHJKSGtLaXR1SWI3CjN2YUY4d0lEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRHQkFLUWdJZGxsUXBwbkRIcTZqU2VYcEtrbkgrc01DZGswYWZyTERmREcKdW5EWXJBS2krZk1YS3l0VHhMZXpMWnBaZ0V5dG9MS0IyY3ExUEpISHBmVllKenVOS2FObnZhZVJEaG83Mjl6MkZxbk8rSkxKcFRpYwpyMHdTV0tWZHE1VDc4dExlQzVycmhXSm5oVkdHSTJqdmtKWHBTeEk0cmZRRFZWd3ZYODl0WUJHVDwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhdGE+PC9kczpLZXlJbmZvPjwvZHM6U2lnbmF0dXJlPjxzYW1sMnA6U3RhdHVzPjxzYW1sMnA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIi8+PC9zYW1sMnA6U3RhdHVzPjxzYW1sMjpBc3NlcnRpb24gSUQ9IjMxMjhlMzc2LTI4MDctNDlmYy1iNzE0LTc4ODMyNjVhMGFmZiIgSXNzdWVJbnN0YW50PSIyMDE4LTA5LTI2VDIwOjM5OjA1Ljk2OVoiIFZlcnNpb249IjIuMCIgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPjxzYW1sMjpJc3N1ZXI+aHR0cDovL2xvY2FsaG9zdDo5MDkyL2RlbW8taWRwPC9zYW1sMjpJc3N1ZXI+PGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CjxkczpTaWduZWRJbmZvPgo8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgo8ZHM6U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NiIvPgo8ZHM6UmVmZXJlbmNlIFVSST0iIzMxMjhlMzc2LTI4MDctNDlmYy1iNzE0LTc4ODMyNjVhMGFmZiI+CjxkczpUcmFuc2Zvcm1zPgo8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgo8L2RzOlRyYW5zZm9ybXM+CjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz4KPGRzOkRpZ2VzdFZhbHVlPlArNWJXNlBFMGsrb0UvU3FxYXhjdkVzNk1QRktvNEVoR0UwSVU2UGM0Uk09PC9kczpEaWdlc3RWYWx1ZT4KPC9kczpSZWZlcmVuY2U+CjwvZHM6U2lnbmVkSW5mbz4KPGRzOlNpZ25hdHVyZVZhbHVlPgpRbVJOWVhBTmxrUnYxNjhQRzhzMDhnNkNkUCtTM3dnL3JEVkVnNVpaMVNRenp2Q0tEdkpUN0taclQwNmpmb00ySDc4RFZMYzQrUWVzCitKcVFFZSszTTI1THhKM3cyc2dLQ1Zpd1FrQk9ydWJ0cjJCSkQ3cXVWNVQ5eUlLQjAxSmNYeXg3WXhFQUZLTFVBRG54UHpuZjVzRlQKcHFITjltMHovZWlEUU5jN0Nqbz0KPC9kczpTaWduYXR1cmVWYWx1ZT4KPGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJQ21UQ0NBZ0lDQ1FEenpYVWlRMkxmb3pBTkJna3Foa2lHOXcwQkFRc0ZBRENCa0RFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVgpCQWdNQ2xkaGMyaHBibWQwYjI0eEVqQVFCZ05WQkFjTUNWWmhibU52ZFhabGNqRWRNQnNHQTFVRUNnd1VVM0J5YVc1bklGTmxZM1Z5CmFYUjVJRk5CVFV3eEVUQVBCZ05WQkFzTUNITmhiV3d0YVdSd01TWXdKQVlEVlFRRERCMXpZVzFzTFdsa2NDNXpjSEpwYm1jdWMyVmoKZFhKcGRIa3VjMkZ0YkRBZUZ3MHhPREE1TVRneE56QXhOREJhRncweU9EQTVNVFV4TnpBeE5EQmFNSUdRTVFzd0NRWURWUVFHRXdKVgpVekVUTUJFR0ExVUVDQXdLVjJGemFHbHVaM1J2YmpFU01CQUdBMVVFQnd3SlZtRnVZMjkxZG1WeU1SMHdHd1lEVlFRS0RCUlRjSEpwCmJtY2dVMlZqZFhKcGRIa2dVMEZOVERFUk1BOEdBMVVFQ3d3SWMyRnRiQzFwWkhBeEpqQWtCZ05WQkFNTUhYTmhiV3d0YVdSd0xuTncKY21sdVp5NXpaV04xY21sMGVTNXpZVzFzTUlHZk1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTkFEQ0JpUUtCZ1FDN0c3RENJZ1owWHo0ZAphZXhCZWQ1RnFDb3dVUFEwRHBMaTRCc0tFMUEyRnVQYURrQW93NHpxSkFTcVhCOGtHbHVMTno3VmE2d1N3aUdaaVlTREVGa3Y5SnIrCnBZUXJ0aGxmZElPejhiUTh4OXFBeTVoRXVWMW83dXdZOHhGdm5KOTZBbUdCTUJmWFYwNVA2bmh5WDlxYmxrYnN4ckpIa0tpdHVJYjcKM3ZhRjh3SURBUUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNEdCQUtRZ0lkbGxRcHBuREhxNmpTZVhwS2tuSCtzTUNkazBhZnJMRGZERwp1bkRZckFLaStmTVhLeXRUeExlekxacFpnRXl0b0xLQjJjcTFQSkhIcGZWWUp6dU5LYU5udmFlUkRobzcyOXoyRnFuTytKTEpwVGljCnIwd1NXS1ZkcTVUNzh0TGVDNXJyaFdKbmhWR0dJMmp2a0pYcFN4STRyZlFEVlZ3dlg4OXRZQkdUPC9kczpYNTA5Q2VydGlmaWNhdGU+PC9kczpYNTA5RGF0YT48L2RzOktleUluZm8+PC9kczpTaWduYXR1cmU+PHNhbWwyOlN1YmplY3Q+PHNhbWwyOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnBlcnNpc3RlbnQiIFNQTmFtZVF1YWxpZmllcj0iaHR0cDovL2xvY2FsaG9zdDo5MDkxL2RlbW8tc3AiPnBldGVyX3Bhcmtlcjwvc2FtbDI6TmFtZUlEPjxzYW1sMjpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+PHNhbWwyOlN1YmplY3RDb25maXJtYXRpb25EYXRhIE5vdE9uT3JBZnRlcj0iMjAxOC0wOS0yNlQyMDo0MTowNS45NjlaIiBSZWNpcGllbnQ9Imh0dHA6Ly9sb2NhbGhvc3Q6OTA5MS9kZW1vLXNwL3NhbWwvc3AvU1NPL2FsaWFzL2RlbW8tc3AiLz48L3NhbWwyOlN1YmplY3RDb25maXJtYXRpb24+PC9zYW1sMjpTdWJqZWN0PjxzYW1sMjpDb25kaXRpb25zIE5vdEJlZm9yZT0iMjAxOC0wOS0yNlQyMDozODowNS45NjlaIiBOb3RPbk9yQWZ0ZXI9IjIwMTgtMDktMjZUMjA6NDE6MDUuOTY5WiI+PHNhbWwyOkF1ZGllbmNlUmVzdHJpY3Rpb24+PHNhbWwyOkF1ZGllbmNlPmh0dHA6Ly9sb2NhbGhvc3Q6OTA5MS9kZW1vLXNwPC9zYW1sMjpBdWRpZW5jZT48L3NhbWwyOkF1ZGllbmNlUmVzdHJpY3Rpb24+PC9zYW1sMjpDb25kaXRpb25zPjxzYW1sMjpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMTgtMDktMjZUMjA6Mzk6MDUuOTY5WiIgU2Vzc2lvbkluZGV4PSJkZjZlZTY1MS1jMzI4LTQwNTctYTZkMi1jOTkzOWQyNDI0MGIiIFNlc3Npb25Ob3RPbk9yQWZ0ZXI9IjIwMTgtMDktMjZUMjE6MDk6MDUuOTY5WiI+PHNhbWwyOkF1dGhuQ29udGV4dD48c2FtbDI6QXV0aG5Db250ZXh0Q2xhc3NSZWY+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6dW5zcGVjaWZpZWQ8L3NhbWwyOkF1dGhuQ29udGV4dENsYXNzUmVmPjwvc2FtbDI6QXV0aG5Db250ZXh0Pjwvc2FtbDI6QXV0aG5TdGF0ZW1lbnQ+PHNhbWwyOkF0dHJpYnV0ZVN0YXRlbWVudC8+PC9zYW1sMjpBc3NlcnRpb24+PC9zYW1sMnA6UmVzcG9uc2U+";
}
